CREATE TABLE ACTOR
ACT ID NUMBER (3)
ACT NAME VARCHAR (20).
ACT GENDER CHAR (I).
PRIMARY KEY (ACT ID)):

CREATE TABLE DIRECTOR
DIR ID NUMBER (3),
DIR NAME VARCHAR (20),
DIR PHONE NUMBER (10),
PRIMARY KEY (DIR_ID)):

CREATE TABLE MOVIES (
MOV ID NUMBER (4),
MOV TITLE VARCHAR (25),
MOV YEAR NUMBER (4),
MOV LANG VARCHAR (12),
DIR ID NUMBER (3),
PRIMARY KEY (MOV ID),
FOREIGN KEY (DIR ID) REFERENCES DIRECTOR (DIR_ID));

CREATE TABLE MOVIE CAST (
ACT ID NUMBER (3),
MOV ID NUMBER (4).
ROLE VARCHAR (10),
PRIMARY KEY (ACT ID. MOV ID),
FOREIGN KEY (ACT ID) REFERENCES ACTOR (ACT_ID),
FOREIGN KEY (MOV ID) REFERENCES MOVIES (MOV ID)):

CREATE TABLE RATING
MOV ID NUMBER (4),
REV STARS VARCHAR (25),
PRIMARY KEY (MOV ID),
FOREIGN KEY (MOV ID) REFERENCES MOVIES (MOV_ID));

[21:35, 27/11/2019] Ganesh H G: INSERT INTO ACTOR VALUES (301. 'ANUSHKA');
INSERT INTO ACTOR VALUES (302, PRABHAS', M):
INSERT INTO ACTOR VALUES (303, 'PUNITH', M);
INSERT INTO ACTOR VALUES (304, JERMY, M');

INSERT INTO DIRECTOR VALUES (60, RAJAMOULI', 8751611001 :
INSERT INTO DIRECTOR VALUES (61. HITCHCOCK', 7766138911 :
INSERT INTO DIRECTOR VALUES (62, FARAN', 9986776531 ;
INSERT INTO DIRECTOR VALUES (63. STEVEN SPIELBERG, 8989776530);

INSERT INTO MOVIES VALUES (1001, BAHUBALI-2', 2017, 'TELUGU', 60):
INSERT INTO MOVIES VALUES (1002,'BAHUBALI-I', 2015, 'TELUGU', 60);
INSERT INTO MOVIES VALUES (1003, AKASH', 2008. 'KANNADA. 61):
INSERT INTO MOVIES VALUES (1004, WAR HORSE', 2011, 'ENGLISH', 63):

INSERT INTO MOVIE CAST VALUES (301, 1002, HEROINE');
INSERT INTO MOVIE CAST VALUES (301, 1001, "HEROINE');
INSERT INTO MOVIE CAST VALUES (303, 1003, HERO');
INSERT INTO MOVIE CAST VALUES (303, 1002, 'GUEST');
INSERT INTO MOVIE_CAST VALUES (304, 1004, 'HERO');

INSERT INTO RATING VALUES (1001, 4);
INSERT INTO RATING VALUES (1002, 2);
INSERT INTO RATING VALUES (1003, 5);
INSERT INTO RATING VALUES (1004, 4);

Query1:(List movies by hitchguy)
SELECT MOV_TITLE
FROM MOVIES
WHERE DIR_ID IN (SELECT DIR_ID
FROM DIRECTOR
WHERE DIR_NAME="HITCHCOCK");

Query2:(Find movie names where one bla bla)
SELECT MOV_TITLE
FROM MOVIES M, MOVIE_CAST MV
WHERE M.MOV_ID=MV.MOV_ID AND ACT_ID IN (SELECT ACT_ID
FROM MOVIE_CAST GROUP BY
ACT_ID HAVING COUNT (ACT ID>1)
GROUP BY MOV_TITLE HAVING COUNT(*)>1;

Query3:(list actors who acted in movies before 2000)
SELECT ACT_NAME,MOV_TITLE,MOV_YEAR
FROM ACTOR A

JOIN MOVIE_CAST C
ON A.ACT_ID=C.ACT_ID


JOIN MOVIES M

ON C.MOV_ID-M.MOV_ID
WHERE M.MOV_YEAR NOT BETWEEN 2000 AND 2015;

OR

SELECT A.ACT_NAME, A.ACT_NAME, C.MOV_TITLE, C.MOV_YEAR
FROM ACTOR A MOVIE_CAST B, MOVIES C WHERE
A.ACT_ID=B.ACT_ID
AND B.MOV ID-C.MOV_ID
AND C.MOV_YEAR NOT BETWEEN 2000 AND 2015;

Query4:(Find title of movies bla bla)
SELECT MOV_TITLE, MAX (REV_STARS)
FROM MOVIES
INNER JOIN RATING USING (MOV_ID)
GROUP BY MOV_TITLE
HAVING MAX (REV STARS)>0
ORDER BY MOV_TITLE;

Query5:(Updating rating of all movies)
UPDATE RATING SET REV_STARS=5 WHERE MOV_ID IN (SELECT MOV_ID FROM MOVIES WHERE
MOV_ID IN(SELECT MOV_ID FROM MOVIES WHERE DIR_ID IN(SELECT DIR_ID FROM DIRECTOR
WHERE DIR_NAME = 'STEVEN SPIELBERG'));
